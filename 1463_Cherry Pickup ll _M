class Solution:
    def cherryPickup(self, grid: List[List[int]]) -> int:
        n = len(grid)
        m = len(grid[0])
        
        @cache
        def dfs(i, j1, j2):
			# Invalid state, return 0 cherries
            if (i >= n or j1 < 0 or j1 >= m or j2 < 0 or j2 >= m):
                return 0
            
			# Try all possible pairs of moves for j1 and j2
            max_cherries = max(dfs(i + 1, j1 + k, j2 + l) for k in range(-1, 2) for l in range(-1, 2))
                        
			# Return total, if j1 = j2 exclude double count
            return grid[i][j1] + max_cherries + grid[i][j2] * int(j1 != j2)
        
        return dfs(0, 0, m - 1)
